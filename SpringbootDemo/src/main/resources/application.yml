server:
  port: 8999

spring:
  redis:
    database: 0
    host: 192.168.17.14
    port: 6379
    cluster:
      nodes: 192.168.17.14:9001,192.168.17.14:9002,192.168.17.14:9003,192.168.17.15:9001,192.168.17.15:9002,192.168.17.15:9003
    lettuce:
      pool:
        min-idle: 0
        max-wait: -1ms
        max-idle: 8
        max-active: 8
  data:
    mongodb:
      database: test
      host: 192.168.17.14
      port: 27017
  kafka:
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      bootstrap-servers: 192.168.17.14:9092,192.168.17.15:9092
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      group-id: consumer_group
      auto-offset-reset: earliest
      enable-auto-commit: true
      bootstrap-servers: 192.168.17.14:9092,192.168.17.15:9092
      auto-commit-interval: 10ms
  datasource:
    username: root
    password: 217024
    url: jdbc:mysql://192.168.17.14:3306/study?useUnicode=true&characterEncoding=utf8&useSSL=false
    driver-class-name: com.mysql.jdbc.Driver
  main:
    allow-bean-definition-overriding: true
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration
  cloud:
    stream:
      binders: # 在此处配置要绑定的rabbitmq的服务信息；
        defaultRabbit: # 表示定义的名称，用于于binding整合
          type: rabbit # 消息组件类型
          environment: # 设置rabbitmq的相关的环境配置
            spring:
              rabbitmq:
                host: 192.168.17.14
                username: root
                password: 217024
                virtual-host: /
      bindings: # 服务的整合处理
        output: # 这个名字是一个通道的名称
          destination: studyExchange # 表示要使用的Exchange名称定义
          content-type: application/json # 设置消息类型，本次为对象json，如果是文本则设置“text/plain”
          binder: defaultRabbit # 设置要绑定的消息服务的具体设置
mybatis:
  mapper-locations: classpath*:com/ruanbanhai/springboot/demo/dao/**.xml
  type-aliases-package: com.ruanbanhai.springboot.demo.pojo

redis:
    database: 1
    host: 192.168.17.15
    port: 6379
    pool:
      max-active: 8
      max-idle: 1
      max-wait: 0
      min-idle: 0
    timeout: 0

eureka:
  instance:
    hostname: eureka
  client:
    register-with-eureka: false
    fetch-registry: false
    service-url:
      defaultZone: http://192.168.17.14:8999/eureka/

jetcache:
  statIntervalMinutes: 15
  areaInCacheName: false
  local:
    default:
      type: linkedhashmap
      keyConvertor: fastjson
  remote:
    default:
      type: redis.lettuce
      keyConvertor: fastjson
      valueEncoder: java
      valueDecoder: java
      uri: redis://192.168.17.14:6379
      poolConfig:
        minIdle:  5
        maxIdle: 20s
        maxTotal: 50





